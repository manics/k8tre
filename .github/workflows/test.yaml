name: Test K8TRE Deployment to K3S 
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
      - "dev-*"
  workflow_dispatch:

jobs:
  # pre-commit:
  #   runs-on: ubuntu-24.04
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-python@v5
  #     - uses: pre-commit/action@v3.0.1

  test:
    runs-on: ubuntu-24.04
    timeout-minutes: 20

    env:
      JUPYTERHUB_HOST: jupyter.k8tre.internal
      KEYCLOAK_HOST: keycloak.k8tre.internal

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: pip
          cache-dependency-path: dev-requirements.txt

      - name: Install dependencies
        run: |
          pip install -r dev-requirements.txt

      - name: Modify hosts to resolve k8tre.internal URLs
        run: |
          h=$(grep "$(hostname -i) " /etc/hosts)
          if [ -n "$h" ]; then
            sudo sed -i -re "s/$h/$h $JUPYTERHUB_HOST $KEYCLOAK_HOST/" /etc/hosts
          else
            echo $(hostname -i) $JUPYTERHUB_HOST $KEYCLOAK_HOST | sudo tee -a /etc/hosts
          fi
          cat /etc/hosts

      - name: Install deployment
        run: |
          ./ci/run_codeblocks.py docs/development/k3s-dev.md --run

      - name: Run tests
        run: |
          python -m pytest -v -s --color=yes

      - name: Get ArgoCD logs, including on failure
        if: always()
        run: |
          echo "::group::argocd-server"
          kubectl -nargocd logs deploy/argocd-server
          echo "::endgroup::"

      - name: Get ArgoCD apps, including on failure
        if: always()
        run: |
          for kind in appprojects applicationsets applications; do
            echo "::group::argocd $kind"
            kubectl describe $kind -A
            echo "::endgroup::"
          done

      - name: Get main K8s resources, including on failure
        if: always()
        run: |
          # Ignore errors since this is for debugging
          set +e
          for namespace in $(kubectl get namespace -ojsonpath='{.items[*].metadata.name}'); do
            echo "***** $namespace *****"
            for kind in daemonset deployment statefulset ingress service pod; do
              for name in $(kubectl -n$namespace get $kind -ojsonpath='{.items[*].metadata.name}'); do
                echo "::group::$kind/$name"
                kubectl -n$namespace describe $kind/$name
                echo "::endgroup::"
              done
            done
          done

  # Set a single status check for the whole workflow, so that we can use it in a
  # branch protection rule
  status-check:
    runs-on: ubuntu-24.04
    needs:
      # - pre-commit
      - test
    if: always()
    steps:
      - name: Get job statuses
        uses: technote-space/workflow-conclusion-action@v3.0.3
        with:
          FALLBACK_CONCLUSION: failure
          STRICT_SUCCESS: true
        # Status is saved in env.WORKFLOW_CONCLUSION

      - name: Status check
        if: env.WORKFLOW_CONCLUSION != 'success'
        run: |
          exit 1
